buildscript {
    repositories {
        maven {
        	name = 'forge'
        	url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            name = "SpongePowered"
        	url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7.+'
        classpath group: 'org.parchmentmc', name: 'librarian', version: '1.+'
    }
}

plugins {
    id "io.freefair.lombok" version "6.5.0.2"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'

version =  property("mc_version")+"-"+property("mod_version")
group = property("mod_group")
archivesBaseName = property("mod_name")

java.toolchain.languageVersion = JavaLanguageVersion.of(property("java_version") as String)

minecraft {
    mappings (channel: property("mapping_channel"), version: (property("mappings_version") + "-" + property("mc_version")))
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory file('run/client')
            property 'forge.enabledGameTestNamespaces', 'dragonsurvival'

            mods {
                dragonsurvival {
                    source sourceSets.main
                }
            }

            // curios stuff
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
        }
        server {
            workingDirectory file('run/server')
            property 'forge.enabledGameTestNamespaces', 'dragonsurvival'

            mods {
                dragonsurvival {
                    source sourceSets.main
                }
            }

            // curios stuff
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
        }

        gameTestServer {
            workingDirectory file('run/server')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dragonsurvival'

            mods {
                dragonsurvival {
                    source sourceSets.main
                }
            }
        }

        data {
            args '--mod', 'dragonsurvival', '--all', '--existing', '"' + file('src/main/resources/') + '"', '--output', '"' + file('src/generated/resources/') + '"'
            mods {
                dragonsurvival {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

processResources {
    from sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("mods.toml") {
        expand "version": project.version
    }

    // Exclude datagenerator .cache directory
    exclude '.cache'
    duplicatesStrategy = 'include'
}

mixin {
    add sourceSets.main, "dragonsurvival.refmap.json"
    config 'dragonsurvival.mixins.json'

    debug.verbose = true
    debug.export = true
}

repositories {
    maven {
    	name = "Gecholib maven"
    	url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }

    // JEI
    maven {
        name 'Blamejared Maven'
        url 'https://maven.blamejared.com'
    }

    maven {
        url = "https://maven.theillusivec4.top/"
    }

    // AppleSkin
    maven { url "https://maven.ryanliptak.com/" }

    // Curseforge
    maven { url "https://cursemaven.com" }
}
dependencies {
    minecraft "net.minecraftforge:forge:$mc_version-$forge_version"

    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-${property('geckolib_mc_version')}:${property('geckolib_version')}")

    compileOnly fg.deobf("mezz.jei:jei-${property('mc_version')}-common-api:${property('jei_version')}")
    runtimeOnly fg.deobf("mezz.jei:jei-${property('mc_version')}-forge:${property('jei_version')}")

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${property('mc_version')}-${curios_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${property('mc_version')}-${curios_version}")

    compileOnly fg.deobf("squeek.appleskin:appleskin-forge:${appleskin_version}:api")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": "Dragon Survival Team",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"Dragon Survival Team",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": mod_id + ".mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}